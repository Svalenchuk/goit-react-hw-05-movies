{"version":3,"file":"static/js/602.80e9c80c.chunk.js","mappings":"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","sources":["components/EditorList/EditorList.styled.jsx","components/EditorList/EditorList.jsx","components/Form/Form.styled.jsx","components/Form/Form.jsx","pages/Movies/Movies.jsx","services/Api.jsx"],"sourcesContent":["import styled from 'styled-components'; \nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  list-style-type: none;\n`;\n\nexport const Item = styled.li`\n  font-weight: 600;\n  font-size: 18px;\n  margin-bottom: 10px;\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  color: #191d1e;\n\n  &:hover {\n    color: tomato;\n  }\n`;","import { useLocation } from 'react-router-dom';\nimport { List, Item, MovieLink } from './EditorList.styled';\n\nconst EditorList = ({ films }) => {\n  const location = useLocation();\n\n    return (\n    <List>\n      {films.map(film => (\n        <Item key={film.id}>\n          <MovieLink to={`/movies/${film.id}`} state={{ from: location }}>\n            {film.title}\n          </MovieLink>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nexport default EditorList;","import styled from 'styled-components'; \n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Input = styled.input`\n  padding: 12px 14px;\n  font: inherit;\n  cursor: pointer;\n  border-radius: 4px;\n  border: 3px solid #191d1e;\n  font-weight: 600;\n  font-size: 20px;\n  margin-right: 10px;\n  border-radius: 4px 8px;\n  outline: none;\n\n  &:hover {\n    color: tomato;\n    border: 3px solid tomato;\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 12px 12px;\n  font: inherit;\n  cursor: pointer;\n  border-radius: 4px;\n  border: 3px solid #191d1e;\n  color: #191d1e;\n  font-weight: 600;\n  font-size: 20px;\n  border-radius: 4px 8px;\n\n  &:hover {\n    color: tomato;\n    border: 3px solid tomato;\n  }\n`;","import { useState } from 'react';\nimport { SearchForm, Input, Button } from './Form.styled';\n\nconst Form = ({ searchMovies }) => {\n  const [query, setQuery] = useState('');\n\n  const handleInputChange = event => {\n    setQuery(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    searchMovies(query.toLowerCase());\n  };\n\n  return (\n    <SearchForm onSubmit={handleSubmit}>\n      <Input\n        type=\"text\"\n        name=\"query\"\n        autoFocus\n        value={query}\n        onChange={handleInputChange}\n      />\n      <Button type=\"submit\">Search</Button>\n    </SearchForm>\n  );\n};\nexport default Form;","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport Loader from '../../components/Loader/Loader';\nimport EditorList from '../../components/EditorList/EditorList';\nimport Form from '../../components/Form/Form';\nimport { fetchSearchByKeyword }  from '../../services/Api';  \n\nconst Movies = () => {\n  const [searchFilms, setSearchFilms] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [noMoviesText, setNoMoviesText] = useState(false);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const searchMovies = queryMovie => {\n    setSearchParams({ query: queryMovie });\n  };\n\n  useEffect(() => {\n    setLoading(true);\n\n    const queryMovie = searchParams.get('query');\n\n    if (queryMovie) {\n      fetchSearchByKeyword(queryMovie)\n        .then(searchResults => {\n          setSearchFilms(searchResults);\n          setNoMoviesText(searchResults.length === 0);\n        })\n        .catch(error => {\n          console.log(error);\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    } else {\n      setLoading(false);\n    }\n  }, [searchParams]);\n\n  return (\n    <main>\n      <Form searchMovies={searchMovies} />\n      {loading && <Loader />}\n      {noMoviesText && (\n        <p>There is no movies with this request. Please, try again</p>\n      )}\n      {searchFilms.length > 0 && <EditorList films={searchFilms} />}\n    </main>\n    \n  );\n};\n\nexport default Movies;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '5d1cfc828cf73d35b8e9de29e9bf01c2';   \n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchSearchByKeyword = async keyword => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchActors = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};    \n\n\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","MovieLink","Link","_templateObject3","_ref","films","location","useLocation","_jsx","children","map","film","to","concat","id","state","from","title","SearchForm","Input","Button","searchMovies","_useState","useState","_useState2","_slicedToArray","query","setQuery","_jsxs","onSubmit","event","preventDefault","toLowerCase","type","name","autoFocus","value","onChange","target","searchFilms","setSearchFilms","_useState3","_useState4","loading","setLoading","_useState5","_useState6","noMoviesText","setNoMoviesText","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","useEffect","queryMovie","get","fetchSearchByKeyword","then","searchResults","length","catch","error","console","log","finally","Form","Loader","EditorList","axios","API_KEY","fetchTrending","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","abrupt","data","results","stop","apply","arguments","_ref2","_callee2","keyword","_context2","_x","fetchMovieDetails","_ref3","_callee3","movieId","_context3","_x2","fetchActors","_ref4","_callee4","_context4","cast","_x3","fetchReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}